name: Test Flask build and dev tests on Flask distributable
on:
  workflow_call:

jobs:

  run:
    # Will read on PR dashboard as 'Deploy / Build / {os} flask'
    # Action dashboard identified by 'Deploy'
    # Requirement settings identified as '{os} flask'
    name: ${{ matrix.os }} flask
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          # linux installation instructions use dev mode instead of distributable
          # - python-version: "3.9"
          #   os: ubuntu-latest
          #   label: environments/environment-Linux.yml
          #   prefix: /usr/share/miniconda3/envs/nwb-guide

          - python-version: "3.9"
            os: macos-latest  # Mac arm64 runner
            label: environments/environment-MAC-apple-silicon.yml
            prefix: /Users/runner/miniconda3/envs/nwb-guide

          - python-version: "3.9"
            os: macos-13  # Mac x64 runner
            label: environments/environment-MAC-intel.yml
            prefix: /Users/runner/miniconda3/envs/nwb-guide

          - python-version: "3.9"
            os: windows-latest
            label: environments/environment-Windows.yml
            prefix: C:\Miniconda3\envs\nwb-guide

    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags

      - name: Printout architecture
        run: uname -m

      # see https://github.com/conda-incubator/setup-miniconda#caching-environments
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: nwb-guide
          use-mamba: true

      - name: Set cache date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Mamba env
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          key:
            conda-${{ runner.os }}-${{ runner.arch }}-${{steps.get-date.outputs.today }}-${{ hashFiles(matrix.label) }}-${{ env.CACHE_NUMBER }}
        env:
          CACHE_NUMBER: ${{ env.CACHE_NUMBER }}
        id: cache

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Update environment
        run: mamba env update -f ${{ matrix.label }}

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm ci --verbose

      # Fix for macos build - remove bad sonpy file
      - if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        run: rm -f /Users/runner/miniconda3/envs/nwb-guide/lib/python3.9/site-packages/sonpy/linux/sonpy.so

      - name: Build PyFlask distribution
        run: npm run build:flask

      - name: Run test on distributed executable
        run: node tests/testPyinstallerExecutable.js

      - name: Run Python tests on distributed executable
        run: npm run test:executable
