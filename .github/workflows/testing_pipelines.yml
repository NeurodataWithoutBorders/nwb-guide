name: Example Pipeline Tests
on:
  schedule:
    - cron: "0 16 * * *"  # Daily at noon EST
  pull_request:

concurrency:  # Cancel previous workflows on the same pull request
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CACHE_NUMBER: 2  # increase to reset cache manually

jobs:
  testing:
    name: Pipelines on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            label: environments/environment-Linux.yml

          - os: macos-latest  # Mac arm64 runner
            label: environments/environment-MAC-apple-silicon.yml

          - os: macos-13  # Mac x64 runner
            label: environments/environment-MAC-intel.yml

          - os: windows-latest
            label: environments/environment-Windows.yml


    steps:
      - uses: actions/checkout@v4
      - run: git fetch --prune --unshallow --tags

      # see https://github.com/conda-incubator/setup-miniconda#caching-environments
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: nwb-guide
          use-mamba: true

      - name: Set cache date
        id: get-date
        run: echo "today=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Conda env
        uses: actions/cache@v4
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}-${{ runner.arch }}-${{steps.get-date.outputs.today }}-${{ hashFiles(matrix.label) }}-${{ env.CACHE_NUMBER }}
        id: cache

      - if: steps.cache.outputs.cache-hit != 'true'
        name: Create and activate environment
        run: mamba env update --name nwb-guide --file ${{ matrix.label }}

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install GUIDE
        run: npm ci --verbose

      # Download GIN Testing Data (modified from https://github.com/catalystneuro/neuroconv/blob/main/.github/workflows/testing.yml)
      - name: Get ephy_testing_data current head hash
        id: ephys
        run: echo "::set-output name=HASH_EPHY_DATASET::$(git ls-remote https://gin.g-node.org/NeuralEnsemble/ephy_testing_data.git HEAD | cut -f1)"
      - name: Cache ephys dataset - ${{ steps.ephys.outputs.HASH_EPHY_DATASET }}
        uses: actions/cache@v4
        id: cache-ephys-datasets
        with:
          path: ./ephy_testing_data
          key: ephys-datasets-2024-03-27-${{ matrix.os }}-${{ steps.ephys.outputs.HASH_EPHY_DATASET }}
      - name: Get ophys_testing_data current head hash
        id: ophys
        run: echo "::set-output name=HASH_OPHYS_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/ophys_testing_data.git HEAD | cut -f1)"
      - name: Cache ophys dataset - ${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
        uses: actions/cache@v4
        id: cache-ophys-datasets
        with:
          path: ./ophys_testing_data
          key: ophys-datasets-2022-08-18-${{ matrix.os }}-${{ steps.ophys.outputs.HASH_OPHYS_DATASET }}
      - name: Get behavior_testing_data current head hash
        id: behavior
        run: echo "::set-output name=HASH_BEHAVIOR_DATASET::$(git ls-remote https://gin.g-node.org/CatalystNeuro/behavior_testing_data.git HEAD | cut -f1)"
      - name: Cache behavior dataset - ${{ steps.behavior.outputs.HASH_BEHAVIOR_DATASET }}
        uses: actions/cache@v4
        id: cache-behavior-datasets
        with:
          path: ./behavior_testing_data
          key: behavior-datasets-2023-07-26-${{ matrix.os }}-${{ steps.behavior.outputs.HASH_behavior_DATASET }}



      - if: steps.cache-ephys-datasets.outputs.cache-hit != 'true' || steps.cache-ophys-datasets.outputs.cache-hit != 'true' || steps.cache-behavior-datasets.outputs.cache-hit != 'true'
        name: Install and configure AWS CLI
        run: |
          pip install awscli
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - if: steps.cache-ephys-datasets.outputs.cache-hit != 'true'
        name: Download ephys dataset from S3
        run: aws s3 cp --recursive ${{ secrets.S3_GIN_BUCKET }}/ephy_testing_data ~/NWB_GUIDE/test-data/GIN/ephy_testing_data
      - if: steps.cache-ophys-datasets.outputs.cache-hit != 'true'
        name: Download ophys dataset from S3
        run: aws s3 cp --recursive ${{ secrets.S3_GIN_BUCKET }}/ophys_testing_data ~/NWB_GUIDE/test-data/GIN/ophys_testing_data
      - if: steps.cache-behavior-datasets.outputs.cache-hit != 'true'
        name: Download behavior dataset from S3
        run: aws s3 cp --recursive ${{ secrets.S3_GIN_BUCKET }}/behavior_testing_data ~/NWB_GUIDE/test-data/GIN/behavior_testing_data



      - if: matrix.os != 'ubuntu-latest'
        name: Run tests
        run: npm run test:pipelines

      - if: matrix.os == 'ubuntu-latest'
        name: Run tests with xvfb
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test:pipelines
